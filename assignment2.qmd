---
title: "Assignment 2"
author: Kevin Linares & Johnia Johansen
date: "`r format(Sys.time(), '%d %B, %Y')`"
embed-resources: true
editor: visual
execute:
  warning: false
  message: false
  error: false
  tidy: true
format: html
theme: spacelab
toc: true
toc-depth: 2
---

<br><br>

## Github repository:

-   <https://github.com/Johniakaky/Testing-repository-727>

<br><br>

You may work in pairs or individually for this assignment. Make sure you join a group in Canvas if you are working in pairs. Turn in this assignment as an HTML or PDF file to ELMS. Make sure to include the R Markdown or Quarto file that was used to generate it.

```{r}
library(tidyverse)
library(gtrendsR)
library(censusapi)
library(ggthemes)
library(knitr)
library(viridis)
library(tidyverse)
library(magrittr)

# set a standard graphic theme for plots from the ggthemes package
theme_set(theme_hc())

# removes scientific notation
options(scipen=999)

```

In this assignment, you will pull from APIs to get data from various data sources and use your data wrangling skills to use them all together. You should turn in a report in PDF or HTML format that addresses all of the questions in this assignment, and describes the data that you pulled and analyzed. You do not need to include full introduction and conclusion sections like a full report, but you should make sure to answer the questions in paragraph form, and include all relevant tables and graphics.

Whenever possible, use piping and `dplyr`. Avoid hard-coding any numbers within the report as much as possible.

## Pulling from APIs

Our first data source is the Google Trends API. Suppose we are interested in the search trends for `crime` and `loans` in Illinois in the year 2020. We could find this using the following code:

```{r}
res <- gtrends(c("crime", "loans"), 
               geo = "US-IL", 
               time = "2020-01-01 2020-12-31", 
               low_search_volume = TRUE)

```

Answer the following questions for the keywords "crime" and "loans".

-   Find the mean, median and variance of the search hits for the keywords.

```{r}
res_summary <- res$interest_over_time |> 
  group_by(keyword) |> 
  # summary statistics 
  summarise(across(hits, list(mean, median, var))) |>  
  mutate_at(2:4, round, 2) |> 
  rename(mean_hits=2, median_hits=3, var_hits=4) |> 
  as_tibble()
```


  -   Below are the means, medians, and variances by key search for our time period. We can see that for **loans**, the mean search was `r res_summary |> filter(keyword=="loans") |> pull(mean_hits)` (median `r res_summary |> filter(keyword=="loans") |> pull(median_hits)`) compared to **crime**,`r res_summary |> filter(keyword=="crime") |> pull(mean_hits)` (median `r res_summary |> filter(keyword=="crime") |> pull(median_hits)`) We also note that there is more variability in **loans** searches based on the variances.
    

```{r}
res_summary |> 
  kable()
```

<br>

-   Which cities (locations) have the highest search frequency for `loans`? Note that there might be multiple rows for each city if there were hits for both "crime" and "loans" in that city. It might be easier to answer this question if we had the search hits info for both search terms in two separate variables. That is, each row would represent a unique city.

    -   The following 7 cities below had the highest search frequency for ***loans*** during our query time period, and accounted for almost $25\%$ of all search hits for ***loans.***

```{r}
res$interest_by_city |> 
  filter(keyword == "loans", !is.na(hits)) |> 
  mutate(perc_hits = round(
    (hits / sum(hits)) * 100, 1)) |> 
  arrange(desc(hits)) |> 
  select(location, keyword, hits, perc_hits) |> 
  head(7) |> kable()
```

<br>

-   Is there a relationship between the search intensities between the two keywords we used?

    -   Based on the time series plot below, it appears that there might be a negative relationship between keywords loans and crimes. Particularly in the early months of 2020, as keyword search hits for loans increases hits for crime decrease. However, there could be a confounding variable that can explain the trajectory of these two keyword search popularizes.
    
    
```{r}
plot(res) 
```


  -   We also estimate a Pearson's r correlation and find a correlation of approximately $-.15$, meaning that there is a somewhat week negative association between these two keyword terms.
    

```{r}
res$interest_over_time |>  
  pivot_wider(names_from = keyword, values_from=hits) |> 
  select(crime, loans) |>  
  corrr::correlate() |> 
  kable()
```


<br><br>

### Repeat the above for keywords related to covid. Make sure you use multiple keywords like we did above. Try several different combinations and think carefully about words that might make sense within this context.

-   Keyword terms commented out in the code chunk below were used but did not show much day-to-day variability in the time period we selected for the state of Illinois. The most important keyword searches are presented below **{"covid", "coronavirus", "WHO", "cases", "mask"}**.

-   From the plot below we can see that as the lock down in late March 2020 took place, the search for "coronavirus" in Illinois peaked. WHO as a search term also peaked in late in early December as "COVID" searches were also becoming popular. Interestingly, masks and cases follow a similar trend line, and there is a few times were we see searches on case going up, and a few days later searches on masks.

```{r}

covid <- gtrends(c("covid", "coronavirus", "WHO", 
                   #"flu", "pandemic", "SARS", 
                   # "vaccine", "PPE
                   # "corona", "sanitizer", "covid-19".
                   "cases", "mask"), 
                 geo = "US-IL", 
                 time = "2020-01-01 2020-12-31", 
                 low_search_volume = TRUE)

plot(covid)
```


<br><br>

## Google Trends + ACS

Now lets add another data set. The `censusapi` package provides a nice R interface for communicating with this API. However, before running queries we need an access key. This (easy) process can be completed here:

<https://api.census.gov/data/key_signup.html>

Once you have an access key, save it as a text file, then read this key in the `cs_key` object. We will use this object in all following API queries. Note that I called my text file `census-key.txt` â€“ yours might be different!

```{r}
cs_key <- read_file(
  "~/UMD/classes/fund_comp_data_display_SURV727/assignments/census-key.txt")
```

In the following, we request basic socio-demographic information (population, median age, median household income, income per capita) for cities and villages in the state of Illinois. Documentation for the 5-year ACS API can be found here: <https://www.census.gov/data/developers/data-sets/acs-5year.html>. The information about the variables used here can be found here: <https://api.census.gov/data/2022/acs/acs5/variables.html>.

```{r}
acs_il <- getCensus(name = "acs/acs5",
                    vintage = 2020, 
                    vars = c("NAME", 
                             "B01001_001E", 
                             "B06002_001E", 
                             "B19013_001E", 
                             "B19301_001E"), 
                    region = "place:*", 
                    regionin = "state:17", # Illinois =17
                    key = cs_key)  |> # pass the census key
  as_tibble()

head(acs_il) |> kable()
```

<br>

Convert values that represent missing to NAs. 

```{r}
# before
acs_il |> 
  slice(17:20) |> 
  kable()
```

<br>

-   We will convert $-666666666$ into NA using the na_if() function in dplyr.

<br>

```{r}

acs_il <- acs_il |> 
  mutate(across(where(is.double),~na_if(., -666666666))) 

# after
acs_il |> 
  slice(17:20) |> 
  kable()

```

<br>

Now, it might be useful to rename the socio-demographic variables (`B01001_001E` etc.) in our data set and assign more meaningful names.

```{r}
# before
col_names_before <- acs_il |> 
  colnames() 

acs_il <-
  acs_il %>%
  rename(pop = B01001_001E, 
         age = B06002_001E, 
         hh_income = B19013_001E, 
         income = B19301_001E) 

# after
col_names_before |> 
  as_tibble() |> 
  add_column(
    acs_il |> colnames()
  ) |> 
  rename(col_names_before =1, col_names_after=2) |> 
  kable()
```

<br>

It seems like we could try to use this location information listed above to merge this data set with the Google Trends data. However, we first have to clean `NAME` so that it has the same structure as `location` in the search interest by city data. Add a new variable `location` to the ACS data that only includes city names.

-   Before we match on city names across both of these tables, we have to manipulate the strings by stripping jargon words (village, town, city), removing white spaces, and abbreviating where needed using functions from the stringr package.

```{r}
acs_il <- acs_il |> 
  # keep everything before comma
  mutate (location = str_extract(NAME, "[^,]+"), 
          # remove jargon words
          location = str_remove(location, "village|city|\\stown|CDP"),
          # remove white spaces
          location = str_trim(location)) 

acs_covid <- 
  covid$interest_by_city |> as_tibble() |> 
  mutate( 
    # abbreviate
    location = str_replace(location, "Saint\\s", "St. "), 
    location = str_replace(location, "Sainte\\s", "Ste. "),
    location = str_remove(location, "Fort ") ) |> 
  # join with ACS
  left_join(acs_il, relationship = "many-to-many")

head(acs_covid) |> kable()

```

<br><br>


Answer the following questions with the "crime" and "loans" Google trends data and the ACS data.

-   First, check how many cities don't appear in both data sets, i.e. cannot be matched. Then, create a new data set by joining the Google Trends and the ACS data. Keep only cities that appear in both data sets.

```{r}
asc_crime_loans <- res$interest_by_city |> as_tibble() |> 
  as_tibble() |> 
  mutate(location = str_replace(location, "Saint\\s", "St. "), 
         location = str_replace(location, "Sainte\\s", "Ste. "),
         location = str_remove(location, "Fort ") ) |> 
  # join with ACS
  left_join(acs_il, relationship = "many-to-many")

# unmatched cities
unmatched_cities <- asc_crime_loans |> 
  filter(is.na(NAME)) |> 
  select(location) 
```

  
    -   There are `r unmatched_cities |> nrow()` city names that do not match across the Census and google trends tables.


```{r}
unmatched_cities |> kable()
```

<br>

-   Compute the mean of the search popularity for both keywords for cities that have an above average median household income and for those that have an below average median household income. When building your pipe, start with creating the grouping variable and then proceed with the remaining tasks. What conclusions might you draw from this?

```{r}
asc_crime_loans_summary <- asc_crime_loans |> 
  mutate(hh_income_median = 
           ifelse(hh_income > mean(hh_income, na.rm=TRUE),
                  "Higher", "Lower")) |> 
  filter(!is.na(hh_income_median)) |> 
  group_by(hh_income_median, keyword) |> 
  reframe(mean_hits = mean(hits, na.rm=TRUE)) |> 
  pivot_wider(names_from = keyword, values_from = mean_hits) |> 
  mutate_at(2:3, round, 1)
```


  -   Cities with below average median household income on average had more searches on **crime** `r asc_crime_loans_summary |> filter(hh_income_median == "Lower") |> pull(crime)` compared to cities with above average median household income `r asc_crime_loans_summary |> filter(hh_income_median == "Higher") |> pull(crime)`, suggesting that less affluent cities were more concerned about crime as it may have directly impacted them during the pandemic. Cities with above average median household income on average had more **loan** searches `r asc_crime_loans_summary |> filter(hh_income_median == "Higher") |> pull(loans)` than cities with below average median household income `r asc_crime_loans_summary |> filter(hh_income_median == "Lower") |> pull(loans)`, suggesting that more affluent cities were more interested in seeking out loans during the pandemic.

```{r}
asc_crime_loans_summary |> kable()
```

<br>

-   Is there a relationship between the median household income and the search popularity of the Google trends terms? Describe the relationship and use a scatterplot.

    -   At a glance, it does not appear that there is a linear relationship between Illinois median household income and keyword search popularity, for instance the residuals with be large for lower median household income cities and search hits. However, when we color code by keywords we see that for the keyword **crime** there is a negative linear relationship, as Illinois median household income goes up, popularity for keyword **crime** goes down during the pandemic. On the other hand, as Illinois median household income goes up, popularity for keyword **loans** goes up during the pandemic, thus there might be a positive linear relationship.

```{r}
asc_crime_loans |> 
  ggplot(aes(x=hh_income, y=hits, color=keyword)) +
  geom_point() +
  geom_smooth(method="lm", na.rm=T, se=FALSE, 
              formula=y~x, aes(color=keyword)) +
  scale_color_viridis_d(option="D", end=.8) +
  ggtitle("Illinois: Median household income is related to popularity of keywords.")
```

<br><br>

Repeat the above steps using the covid data and the ACS data.

```{r}
covid_unmatched_names <- acs_covid |> 
  filter(is.na(NAME)) |> 
  select(location) 
```

-   We identified `r covid_unmatched_names |> nrow()` out of `r acs_covid |> nrow()` city names that do not match across both the Census and Google trends on "COVID" related keywords.

```{r}
covid_unmatched_names |> kable()
```

<br>

```{r}
acs_covid_summary <- acs_covid |> 
    mutate(hh_income_median = 
               ifelse(hh_income > mean(hh_income, na.rm=TRUE),
                      "Higher", "Lower")) |> 
    filter(!is.na(hh_income_median)) |> 
    group_by(hh_income_median, keyword) |> 
    reframe(mean_hits = mean(hits, na.rm=TRUE)) |> 
    pivot_wider(names_from = hh_income_median, values_from = mean_hits) |> 
  mutate(mean_diff = Lower - Higher ) |> 
  mutate_at(2:4, round, 1) |> 
  arrange(mean_diff)
```


-   We observe popularity in the keyword **cases** among both above average median household income cities `r acs_covid_summary |> filter(keyword=="cases") |>  pull(Higher)` and below average median household income cities `r acs_covid_summary |> filter(keyword=="cases") |>  pull(Lower)`. However, below average median household income cities had more searches on **cases** with a mean difference of `r acs_covid_summary |> filter(keyword=="cases") |>  pull(mean_diff)` hits compared to above average median household income cities.


<br>

```{r}
acs_covid_summary |> kable()
```

<br>

-   Using scatterplots of our **COVID** keyword searches during the pandemic and median household income among cities in Illinois, we see some associations. For instance, we see a negative association between median household income and **cases**, and median household income and **WHO**. As median household income increases, popularity in **cases** and **WHO** decreases. We also see a positive association between median household income and **covid**, as median household income increases, popularity in keyword **covid** increases.

```{r}
acs_covid |> 
  ggplot(aes(x=hh_income, y=hits, color=keyword)) +
  geom_point() +
  facet_wrap(~keyword, ncol=2) +
  geom_smooth(method="lm", na.rm=T, se=FALSE, 
              formula=y~x, aes(color=keyword)) +
  scale_color_viridis_d(option="B", end=.8) +
  ggtitle("Illinois: Median household income associated with popular COVID \n
          related keyword searches during the pandemic.")
```
